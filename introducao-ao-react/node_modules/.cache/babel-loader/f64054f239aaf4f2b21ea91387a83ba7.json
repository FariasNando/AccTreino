{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GIT\\\\introducao-ao-react\\\\src\\\\components\\\\Textos.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inicialTxt = \"Hello World!\"; //Função com a data\n\nfunction DateSet() {\n  const date = new Date();\n  const dia = date.getDate();\n  const mes = date.getMonth() + 1;\n  const ano = date.getFullYear();\n  const fullDate = dia + '/' + mes + '/' + ano;\n  return fullDate;\n} //Função com os tipos de textos\n\n\n_c = DateSet;\n\nfunction ListaTexto(props) {\n  function txtNormal(t) {\n    t = inicialTxt;\n    return t;\n  }\n\n  function txtUpperCase(t) {\n    const newT = t.toUpperCase();\n    return newT;\n  }\n\n  function txtLowerCase(t) {\n    const newT = t.toLowerCase();\n    return newT;\n  }\n\n  function txtSpace(t) {\n    const newT = t.split(\"\").join(\"  \");\n    return newT;\n  }\n\n  function txtReverse(t) {\n    const newT = t.split('').reverse().join('');\n    return newT;\n  }\n\n  function txtChange(t) {\n    const newT = t.split(\" \").reverse().join(\" \");\n    return newT;\n  }\n\n  function txtRepReverse(t) {\n    const newT = t.repeat(2).split('').reverse();\n    return newT;\n  }\n\n  function txtChangeReverse(t) {\n    const newT = t.split(\" \").reverse().join(\" \").split(\"\").reverse().join(\"\");\n    return newT;\n  } // Array com os tipos de textos formatados\n\n\n  const TextsArray = [txtNormal(props.text) + \" \" + DateSet(), txtUpperCase(props.name) + \" \" + DateSet(), txtLowerCase(props.name) + \" \" + DateSet(), txtSpace(props.name) + \" \" + DateSet(), txtReverse(props.name) + \" \" + DateSet(), txtChange(props.name) + \" \" + DateSet(), txtRepReverse(props.name) + \"  \" + DateSet(), txtChangeReverse(props.name) + \" \" + DateSet()];\n  const itens = TextsArray.map((data, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: data\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 51\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"dir\", {\n    className: \"texts\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Formas dos textos: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), itens]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = ListaTexto;\nexport default ListaTexto;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DateSet\");\n$RefreshReg$(_c2, \"ListaTexto\");","map":{"version":3,"sources":["C:/Users/User/Documents/GIT/introducao-ao-react/src/components/Textos.js"],"names":["React","inicialTxt","DateSet","date","Date","dia","getDate","mes","getMonth","ano","getFullYear","fullDate","ListaTexto","props","txtNormal","t","txtUpperCase","newT","toUpperCase","txtLowerCase","toLowerCase","txtSpace","split","join","txtReverse","reverse","txtChange","txtRepReverse","repeat","txtChangeReverse","TextsArray","text","name","itens","map","data","index"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nconst inicialTxt = \"Hello World!\"\r\n//Função com a data\r\nfunction DateSet() {\r\n    const date = new Date();\r\n    const dia = date.getDate();\r\n    const mes = date.getMonth() + 1;\r\n    const ano = date.getFullYear();    \r\n    const fullDate = dia + '/' + mes + '/' + ano;\r\n    return fullDate;\r\n}\r\n//Função com os tipos de textos\r\nfunction ListaTexto(props) {\r\n   \r\n    function txtNormal(t) {\r\n        t = inicialTxt\r\n        return t;\r\n    }    \r\n\r\n    function txtUpperCase(t) {\r\n        const newT = t.toUpperCase();\r\n        return newT\r\n    }\r\n\r\n    function txtLowerCase(t) {\r\n        const newT = t.toLowerCase();\r\n        return newT\r\n    }\r\n\r\n    function txtSpace(t) {\r\n        const newT = t.split(\"\").join(\"  \");\r\n        return newT\r\n    }\r\n\r\n    function txtReverse(t) {\r\n        const newT = t.split('').reverse().join('');\r\n        return newT\r\n    }\r\n\r\n    function txtChange(t) {\r\n        const newT = t.split(\" \").reverse().join(\" \");\r\n        return newT\r\n    }\r\n\r\n    function txtRepReverse(t) {\r\n        const newT = t.repeat(2).split('').reverse();\r\n        return newT\r\n    }\r\n\r\n    function txtChangeReverse(t) {\r\n        const newT = t.split(\" \").reverse().join(\" \").split(\"\").reverse().join(\"\");\r\n        return newT\r\n    }\r\n    \r\n     \r\n // Array com os tipos de textos formatados\r\n    const TextsArray = [\r\n        txtNormal(props.text) + \" \" + DateSet(), \r\n        txtUpperCase(props.name) + \" \" + DateSet(), \r\n        txtLowerCase(props.name) + \" \" + DateSet(),   \r\n        txtSpace(props.name) + \" \" + DateSet(),  \r\n        txtReverse(props.name) + \" \" + DateSet(),\r\n        txtChange(props.name) + \" \" + DateSet(),  \r\n        txtRepReverse(props.name) + \"  \" + DateSet(),\r\n        txtChangeReverse(props.name) + \" \" + DateSet(),  \r\n    ]\r\n   \r\n    const itens = TextsArray.map((data, index) => <p key={index}>{data}</p>)\r\n    \r\n    return (\r\n        <dir className=\"texts\">\r\n            <h1>Formas dos textos: </h1>\r\n            {itens}\r\n        </dir>\r\n    )\r\n}\r\n\r\nexport default ListaTexto\r\n"]},"metadata":{},"sourceType":"module"}