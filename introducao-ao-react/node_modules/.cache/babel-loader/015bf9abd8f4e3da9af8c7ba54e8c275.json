{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GIT\\\\introducao-ao-react\\\\src\\\\components\\\\Textos.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst txtMain = \"Hello World!\";\n\nfunction DateSet() {\n  const date = new Date();\n  const dia = date.getDate();\n  const mes = date.getMonth() + 1;\n  const ano = date.getFullYear();\n  const dateComple = dia + '/' + mes + '/' + ano;\n  return dateComple;\n}\n\n_c = DateSet;\n\nfunction ListaTexto(props) {\n  function txtNormal(txtShow) {\n    txtShow = txtMain;\n    return txtShow;\n  }\n\n  function txtUpperCase(txtShow) {\n    let rec = txtShow.toUpperCase();\n    return rec;\n  }\n\n  function txtLowerCase(txtShow) {\n    let rec = txtShow.toLowerCase();\n    return rec;\n  }\n\n  function txtInvertWorld(txtShow) {\n    let rec = txtShow.split('').reverse().join('');\n    return rec;\n  }\n\n  function txtChargeWorlds(txtShow) {\n    let rec = txtShow.split(\" \").reverse().join(\" \");\n    return rec;\n  }\n\n  function txtLowerAndUpperCase(txtShow) {\n    let rec = '';\n\n    for (let i = 0; i < txtShow.length; i++) {\n      if (i % 2 === 1) {\n        rec += txtShow.charAt(i).toLowerCase();\n      } else {\n        rec += txtShow.charAt(i).toUpperCase();\n      }\n    }\n\n    return rec;\n  }\n\n  function txtAdd(txtShow) {\n    let rec = txtShow.repeat(2).split('').reverse();\n    return rec;\n  }\n\n  function txtInvert(txtShow) {\n    let rec = txtShow.split(\" \").reverse().join(\" \").split(\"\").reverse().join(\"\");\n    return rec;\n  }\n\n  function txtSpaced(txtShow) {\n    let rec = txtShow.split(\"\").join(\"  \") + DateSet();\n    return rec;\n  }\n\n  function txtArrow(txtShow) {\n    let rec = txtShow.split(\"\").join(\" → \") + DateSet();\n    return rec;\n  }\n\n  const WorldsArray = [txtNormal(props.text) + \" \" + DateSet(), txtUpperCase(props.name) + \" \" + DateSet(), txtLowerCase(props.name) + \" \" + DateSet(), txtInvertWorld(props.name) + \" \" + DateSet(), txtChargeWorlds(props.name) + \" \" + DateSet(), txtLowerAndUpperCase(props.name) + \" \" + DateSet(), txtAdd(props.name) + \"  \" + DateSet(), txtInvert(props.name) + \" \" + DateSet(), txtSpaced(props.name) + \" \" + DateSet(), txtArrow(props.name) + \" \" + DateSet()];\n  const items = WorldsArray.map((data, index) => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"dir\", {\n    id: \"showList\",\n    children: items\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = ListaTexto;\nexport default ListaTexto;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DateSet\");\n$RefreshReg$(_c2, \"ListaTexto\");","map":{"version":3,"sources":["C:/Users/User/Documents/GIT/introducao-ao-react/src/components/Textos.js"],"names":["React","txtMain","DateSet","date","Date","dia","getDate","mes","getMonth","ano","getFullYear","dateComple","ListaTexto","props","txtNormal","txtShow","txtUpperCase","rec","toUpperCase","txtLowerCase","toLowerCase","txtInvertWorld","split","reverse","join","txtChargeWorlds","txtLowerAndUpperCase","i","length","charAt","txtAdd","repeat","txtInvert","txtSpaced","txtArrow","WorldsArray","text","name","items","map","data","index"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nconst txtMain = \"Hello World!\"\r\n\r\n\r\nfunction DateSet() {\r\n    const date = new Date();\r\n    const dia = date.getDate();\r\n    const mes = date.getMonth() + 1;\r\n    const ano = date.getFullYear();    \r\n    const dateComple = dia + '/'+ mes +'/'+ ano;\r\n    return dateComple;\r\n}\r\n\r\nfunction ListaTexto(props) {\r\n   \r\n    function txtNormal(txtShow) {\r\n        txtShow = txtMain\r\n        return txtShow;\r\n    }\r\n    function txtUpperCase(txtShow) {\r\n        let rec = txtShow.toUpperCase();\r\n        return rec\r\n    }\r\n    function txtLowerCase(txtShow) {\r\n        let rec = txtShow.toLowerCase();\r\n        return rec\r\n    }\r\n    function txtInvertWorld(txtShow) {\r\n        let rec = txtShow.split('').reverse().join('');\r\n        return rec\r\n    }\r\n    function txtChargeWorlds(txtShow) {\r\n        let rec = txtShow.split(\" \").reverse().join(\" \");\r\n        return rec\r\n    }\r\n    function txtLowerAndUpperCase(txtShow) {\r\n        let rec = '';\r\n        for (let i = 0; i < txtShow.length; i++) {\r\n            if (i % 2 === 1) {\r\n                rec += txtShow.charAt(i).toLowerCase();\r\n            } else {\r\n                rec += txtShow.charAt(i).toUpperCase();\r\n            }\r\n        }\r\n        return rec;\r\n    }\r\n    function txtAdd(txtShow) {\r\n        let rec = txtShow.repeat(2).split('').reverse();\r\n        return rec\r\n    }\r\n    function txtInvert(txtShow) {\r\n        let rec = txtShow.split(\" \").reverse().join(\" \").split(\"\").reverse().join(\"\");\r\n        return rec\r\n    }\r\n    function txtSpaced(txtShow) {\r\n        let rec = txtShow.split(\"\").join(\"  \") + DateSet();\r\n        return rec\r\n    }\r\n    function txtArrow(txtShow) {\r\n        let rec = txtShow.split(\"\").join(\" → \") +  DateSet();\r\n        return rec\r\n    }\r\n \r\n    const WorldsArray = [\r\n        txtNormal(props.text) + \" \" + DateSet(),\r\n        txtUpperCase(props.name) + \" \" + DateSet(),\r\n        txtLowerCase(props.name) + \" \" + DateSet(),\r\n        txtInvertWorld(props.name) + \" \" + DateSet(),\r\n        txtChargeWorlds(props.name) + \" \" + DateSet(),\r\n        txtLowerAndUpperCase(props.name) + \" \" + DateSet(),\r\n        txtAdd(props.name) + \"  \" + DateSet(),\r\n        txtInvert(props.name) + \" \" + DateSet(),\r\n        txtSpaced(props.name) + \" \" + DateSet(),\r\n        txtArrow(props.name) + \" \" + DateSet()\r\n    ]\r\n   \r\n    const items = WorldsArray.map((data, index) => {\r\n        return <p key={index}>{data}</p>\r\n    })\r\n    return (\r\n        <dir id=\"showList\">\r\n            {items}\r\n        </dir>\r\n    )\r\n}\r\n\r\nexport default ListaTexto\r\n"]},"metadata":{},"sourceType":"module"}